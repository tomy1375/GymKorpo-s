---
// Eliminamos el domingo de la lista de días
const weekdays = ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"];

// Definimos los horarios principales para la tabla
const timeSlots = [
  "7:30 - 19:00",
  "8:00 - 9:00",
  "19:00 - 22:00",
  "20:00 - 21:00",
  "21:00 - 22:00",
  "16:00 - 17:00",
  "17:15 - 18:15"
];

// Estructura de horarios por día (sin domingo)
const schedule = [
  {
    day: "Lunes",
    classes: [
      { time: "7:30 - 19:00", name: "Musculación", trainer: "Guillermo Flores" },
      { time: "8:00 - 9:00", name: "Ritmo/Funcional", trainer: "Judith Domínguez" },
      { time: "19:00 - 22:00", name: "Musculación", trainer: "Enrique Montes" },
      { time: "20:00 - 21:00", name: "Spinning/Funcional", trainer: "Emanuel de la Torre" },
      { time: "21:00 - 22:00", name: "Spinning/Funcional", trainer: "Emanuel de la Torre" }
    ]
  },
  {
    day: "Martes",
    classes: [
      { time: "7:30 - 19:00", name: "Musculación", trainer: "Guillermo Flores" },
      { time: "19:00 - 22:00", name: "Musculación", trainer: "Enrique Montes" },
      { time: "21:00 - 22:00", name: "Fit-dance", trainer: "Judith Domínguez" }
    ]
  },
  {
    day: "Miércoles",
    classes: [
      { time: "7:30 - 19:00", name: "Musculación", trainer: "Guillermo Flores" },
      { time: "8:00 - 9:00", name: "Ritmo/Funcional", trainer: "Judith Domínguez" },
      { time: "19:00 - 22:00", name: "Musculación", trainer: "Enrique Montes" },
      { time: "20:00 - 21:00", name: "Spinning/Funcional", trainer: "Emanuel de la Torre" },
      { time: "21:00 - 22:00", name: "Spinning/Funcional", trainer: "Emanuel de la Torre" }
    ]
  },
  {
    day: "Jueves",
    classes: [
      { time: "7:30 - 19:00", name: "Musculación", trainer: "Guillermo Flores" },
      { time: "19:00 - 22:00", name: "Musculación", trainer: "Enrique Montes" },
      { time: "21:00 - 22:00", name: "Fit-dance", trainer: "Judith Domínguez" }
    ]
  },
  {
    day: "Viernes",
    classes: [
      { time: "7:30 - 19:00", name: "Musculación", trainer: "Guillermo Flores" },
      { time: "8:00 - 9:00", name: "Ritmo/Funcional", trainer: "Judith Domínguez" },
      { time: "19:00 - 22:00", name: "Musculación", trainer: "Enrique Montes" },
      { time: "20:00 - 21:00", name: "Spinning/Funcional", trainer: "Emanuel de la Torre" },
      { time: "21:00 - 22:00", name: "Spinning/Funcional", trainer: "Emanuel de la Torre" }
    ]
  },
  {
    day: "Sábado",
    classes: [
      { time: "16:00 - 17:00", name: "Step Coreográfico", trainer: "Héctor Andrada" },
      { time: "17:15 - 18:15", name: "X55 (Radical Fitness)", trainer: "Héctor Andrada" }
    ]
  }
];

// Función para determinar el color de la clase
function getClassColor(className) {
  switch (className) {
    case "Musculación":
      return "text-green-400";
    case "Ritmo/Funcional":
      return "text-pink-400";
    case "Fit-dance":
      return "text-purple-400";
    case "Spinning/Funcional":
      return "text-blue-400";
    case "Step Coreográfico":
      return "text-yellow-400";
    case "X55 (Radical Fitness)":
      return "text-orange-400";
    default:
      return "text-gray-400";
  }
}
---

<section id="horarios" class="py-20 bg-black animate-on-scroll">
  <div class="max-w-screen-2xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-anton text-yellow-400 mb-4">HORARIOS</h2>
      <p class="text-xl text-gray-300 max-w-5xl mx-auto font-lato font-light normal-case">
        Consulta nuestros horarios de clases y planifica tu semana fitness. Ofrecemos flexibilidad para adaptarnos a tu rutina diaria.
      </p>
    </div>

    <!-- Leyenda de colores -->
    <div class="mb-8 flex flex-wrap justify-center gap-4">
      <div class="flex items-center feature-icon">
        <span class="w-4 h-4 bg-green-400 rounded-full inline-block mr-2"></span>
        <span class="text-white font-lato">Musculación</span>
      </div>
      <div class="flex items-center feature-icon">
        <span class="w-4 h-4 bg-pink-400 rounded-full inline-block mr-2"></span>
        <span class="text-white font-lato">Ritmo/Funcional</span>
      </div>
      <div class="flex items-center feature-icon">
        <span class="w-4 h-4 bg-purple-400 rounded-full inline-block mr-2"></span>
        <span class="text-white font-lato">Fit-dance</span>
      </div>
      <div class="flex items-center feature-icon">
        <span class="w-4 h-4 bg-blue-400 rounded-full inline-block mr-2"></span>
        <span class="text-white font-lato">Spinning/Funcional</span>
      </div>
      <div class="flex items-center feature-icon">
        <span class="w-4 h-4 bg-yellow-400 rounded-full inline-block mr-2"></span>
        <span class="text-white font-lato">Step Coreográfico</span>
      </div>
      <div class="flex items-center feature-icon">
        <span class="w-4 h-4 bg-orange-400 rounded-full inline-block mr-2"></span>
        <span class="text-white font-lato">X55 (Radical Fitness)</span>
      </div>
    </div>

    <!-- Desktop Schedule -->
    <div class="hidden lg:block overflow-x-auto">
      <div class="min-w-full">
        <table class="min-w-full bg-zinc-900 rounded-lg overflow-hidden">
          <thead>
            <tr>
              <th class="py-4 px-6 bg-zinc-800 text-left text-sm font-medium text-white uppercase tracking-wider font-anton">
                Horario
              </th>
              {weekdays.map(day => (
                <th class="py-4 px-6 bg-zinc-800 text-left text-sm font-medium text-white uppercase tracking-wider font-anton">
                  {day}
                </th>
              ))}
            </tr>
          </thead>
          <tbody class="divide-y divide-zinc-700 font-lato">
            {timeSlots.map(timeSlot => (
              <tr>
                <td class="py-4 px-6 text-sm font-medium text-white">{timeSlot}</td>
                {weekdays.map(day => {
                  const daySchedule = schedule.find(s => s.day === day);
                  const classInfos = daySchedule?.classes.filter(c => c.time === timeSlot) || [];
                  
                  return (
                    <td class="py-4 px-6 text-sm text-gray-300">
                      {classInfos.length > 0 ? (
                        <div>
                          {classInfos.map((classInfo, idx) => (
                            <div class={idx > 0 ? "mt-2 pt-2 border-t border-zinc-700" : ""}>
                              <span class={`font-medium ${getClassColor(classInfo.name)}`}>
                                {classInfo.name}
                              </span>
                              <br />
                              <span class="text-xs text-gray-400 normal-case">Instructor: {classInfo.trainer}</span>
                            </div>
                          ))}
                        </div>
                      ) : ""}
                    </td>
                  );
                })}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>

    <!-- Mobile Schedule (Accordion) -->
    <div class="lg:hidden space-y-4 font-lato">
      {schedule.map((daySchedule, index) => (
        <div class="bg-zinc-900 rounded-lg overflow-hidden">
          <button 
            class="w-full px-6 py-4 text-left bg-zinc-800 focus:outline-none font-anton" 
            id={`day-button-${index}`}
            aria-expanded="false"
            aria-controls={`day-content-${index}`}
          >
            <span class="text-lg font-medium text-white">{daySchedule.day}</span>
            <span class="float-right text-white">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </span>
          </button>
          <div 
            id={`day-content-${index}`} 
            class="hidden px-6 py-4 transition-all duration-200"
          >
            {daySchedule.classes.length > 0 ? (
              <ul class="space-y-3">
                {daySchedule.classes.map(classInfo => (
                  <li class="border-b border-zinc-700 pb-2">
                    <div class="flex justify-between">
                      <span class="text-white">{classInfo.time}</span>
                      <span class={`font-medium ${getClassColor(classInfo.name)}`}>
                        {classInfo.name}
                      </span>
                    </div>
                    <div class="text-sm text-gray-400 normal-case">Instructor: {classInfo.trainer}</div>
                  </li>
                ))}
              </ul>
            ) : (
              <p class="text-gray-400 normal-case">No hay clases programadas para este día.</p>
            )}
          </div>
        </div>
      ))}
    </div>

    <!-- Notas adicionales -->
    <div class="mt-8 text-center">
      <p class="text-gray-300 font-lato italic normal-case">
        * Los horarios pueden estar sujetos a cambios. Te recomendamos confirmar antes de tu visita.
      </p>
      <p class="text-gray-300 font-lato italic normal-case mt-2">
        * Domingo: Cerrado
      </p>
    </div>
  </div>
</section>

<script>
  // Mobile accordion functionality
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('[id^="day-button-"]').forEach((button, index) => {
      button.addEventListener('click', () => {
        const content = document.getElementById(`day-content-${index}`);
        const icon = button.querySelector('svg');
        
        if (content && icon) {
          content.classList.toggle('hidden');
          icon.classList.toggle('rotate-180');
          
          // Update aria-expanded
          const isExpanded = content.classList.contains('hidden') ? 'false' : 'true';
          button.setAttribute('aria-expanded', isExpanded);
        }
      });
    });
  });
</script>
