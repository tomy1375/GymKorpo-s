---
const navItems = [
  { name: "Clases", href: "#clases" },
  { name: "Horarios", href: "#horarios" },
  { name: "Comunidad", href: "#comunidad" },
  { name: "Contacto", href: "#contacto" },
];
---

<header class="fixed w-full z-50 transition-all duration-300" id="navbar">
  <div class="max-w-screen-2xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-20">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="#" class="flex items-center">
          <img 
            src="/logo2w.png" 
            alt="Logo del gimnasio" 
            class="h-16 sm:h-16 w-auto lg:mt-2"
          />
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-10 lg:mt-3">
        {navItems.map(item => (
          <a 
            href={item.href} 
            class="text-white hover:text-yellow-400 tracking-wider text-xl font-anton transition-colors duration-200"
          >
            {item.name}
          </a>
        ))}
      </nav>

      <!-- Mobile Menu Button -->
      <div class="md:hidden flex items-center">
        <button 
          type="button" 
          class="text-white z-[9999] relative" 
          id="mobile-menu-button"
          aria-label="Abrir menú"
        >
          <div class="w-8 h-8 flex items-center justify-center">
            <span class="hamburger-line hamburger-line-1"></span>
            <span class="hamburger-line hamburger-line-2"></span>
            <span class="hamburger-line hamburger-line-3"></span>
          </div>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu - Pantalla completa -->
  <div 
    class="md:hidden fixed inset-0 bg-black bg-opacity-95 z-[9998] flex items-center justify-center transform translate-y-full transition-transform duration-500 ease-in-out" 
    id="mobile-menu"
    style="height: 100vh; position: fixed; top: 0; left: 0; right: 0; bottom: 0;"
  >
    <nav class="flex flex-col items-center justify-center w-full h-full">
      {navItems.map((item, index) => (
        <a 
          href={item.href} 
          class="mobile-nav-item py-4 px-6 text-white hover:text-yellow-400 font-anton text-3xl tracking-wider opacity-0 transform translate-y-8"
          style={`transition-delay: ${index * 0.1}s;`}
        >
          {item.name}
        </a>
      ))}
    </nav>
  </div>
</header>

<style>
  /* Estilos para el botón de hamburguesa */
  .hamburger-line {
    @apply absolute w-6 h-0.5 bg-white transition-all duration-300 ease-in-out;
  }
  
  .hamburger-line-1 {
    transform: translateY(-8px);
  }
  
  .hamburger-line-3 {
    transform: translateY(8px);
  }
  
  /* Estilos para el botón activo (X) */
  .menu-open .hamburger-line-1 {
    transform: rotate(45deg);
  }
  
  .menu-open .hamburger-line-2 {
    opacity: 0;
  }
  
  .menu-open .hamburger-line-3 {
    transform: rotate(-45deg);
  }
  
  /* Estilos para los elementos del menú móvil */
  .mobile-nav-item {
    transition: opacity 0.5s ease, transform 0.5s ease, color 0.3s ease;
  }
  
  /* Clase para cuando el menú está abierto */
  .menu-visible {
    transform: translateY(0) !important;
  }
  
  /* Clase para cuando los elementos del menú son visibles */
  .item-visible {
    opacity: 1 !important;
    transform: translateY(0) !important;
  }
  
  /* Prevenir scroll cuando el menú está abierto */
  .no-scroll {
    overflow: hidden !important;
    position: fixed !important;
    width: 100% !important;
    height: 100% !important;
  }
  
  /* Asegurar que el menú móvil siempre cubra toda la pantalla */
  #mobile-menu {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    height: 100vh !important;
    width: 100vw !important;
    overflow: hidden !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileNavItems = document.querySelectorAll('.mobile-nav-item');
    
    if (mobileMenuButton && mobileMenu) {
      let menuOpen = false;
      
      mobileMenuButton.addEventListener('click', () => {
        menuOpen = !menuOpen;
        
        // Cambiar el estado del botón
        mobileMenuButton.classList.toggle('menu-open', menuOpen);
        
        // Mostrar/ocultar el menú con animación
        if (menuOpen) {
          // Abrir menú
          mobileMenu.classList.add('menu-visible');
          document.body.classList.add('no-scroll');
          document.documentElement.classList.add('no-scroll'); // También aplicar al html
          
          // Animar elementos con un pequeño retraso
          setTimeout(() => {
            mobileNavItems.forEach(item => {
              item.classList.add('item-visible');
            });
          }, 300);
        } else {
          // Ocultar elementos primero
          mobileNavItems.forEach(item => {
            item.classList.remove('item-visible');
          });
          
          // Luego cerrar el menú después de un retraso
          setTimeout(() => {
            mobileMenu.classList.remove('menu-visible');
            document.body.classList.remove('no-scroll');
            document.documentElement.classList.remove('no-scroll');
          }, 300);
        }
      });
      
      // Cerrar menú cuando se hace clic en un enlace
      mobileNavItems.forEach(link => {
        link.addEventListener('click', () => {
          // Ocultar elementos primero
          mobileNavItems.forEach(item => {
            item.classList.remove('item-visible');
          });
          
          // Cambiar el estado del botón
          mobileMenuButton.classList.remove('menu-open');
          menuOpen = false;
          
          // Luego cerrar el menú después de un retraso
          setTimeout(() => {
            mobileMenu.classList.remove('menu-visible');
            document.body.classList.remove('no-scroll');
            document.documentElement.classList.remove('no-scroll');
          }, 300);
        });
      });
    }
    
    // Navbar scroll effect
    const navbar = document.getElementById('navbar');
    
    if (navbar) {
      window.addEventListener('scroll', () => {
        if (window.scrollY > 50) {
          navbar.classList.add('bg-black/80', 'backdrop-blur-sm');
        } else {
          navbar.classList.remove('bg-black/80', 'backdrop-blur-sm');
        }
      });
    }
    
    // Inicializar el estado del menú
    if (mobileMenu) {
      // Asegurarse de que el menú esté oculto al cargar
      mobileMenu.classList.remove('menu-visible');
    }
  });
</script>